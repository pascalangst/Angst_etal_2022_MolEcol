# Script to cut genes out of g.vcf's and create fasta files for each them.
# The script will use the H. tverminnensis reference genome
# use environment with PopGenome, vcflib and Bioperl

# Put all g.vcf.gz files you want to include into a folder called gvcf/*.g.vcf.gz

# create folders
# "originals" contains all the raw input files
# "ref" contains the reference genome, also split in contigs
# "vcf" contains a vcf for each sample and for each sample a folder with its vcf split in contigs
# "samplefasta" contains two final fasta's for each sample, one for each "haplotype"
# "fasta_ingroup" contains all multi sequence alignments for ingroup samples (without reference)
# "fasta_reference" contains the fasta files for each gene of reference and outgroup
# "tmp" contains all temporary files
mkdir originals
mkdir -p ref/ref_split
mkdir -p vcf/vcf_split
mkdir samplefasta
mkdir fasta_ingroup
mkdir -p fasta_references/{fasta_FIOER33,fasta_BEOM2}
mkdir tmp


# copy all needed data to originals folder:
# reference and annotation file
cp /home/pascal/master_publication/data/FI-OER-3-3.pacbio.v1/FI-OER-3-3.pacbio.v1.fasta originals/.
cp /home/pascal/master_publication/data/FI-OER-3-3.pacbio.v1/FI-OER-3-3.pacbio.v1.gff3 originals/.
cp /home/pascal/master_thesis/data/reference_genome_NCBI/BEOM2/GCA_004325065.1_BEOM2_v1_cds_from_genomic.fna originals/.
# perl script to cut the gene sequences out of the genome-fasta according to the gff
cp /home/pascal/master_publication/scripts/gff2fasta_Ham.pl originals/.
# Rscript to split vcf in contigs
cp /home/pascal/master_publication/scripts/MKTest_Ham/vcfsplit.r originals/.

# prepare reference
picard CreateSequenceDictionary R=originals/FI-OER-3-3.pacbio.v1.fasta O=originals/FI-OER-3-3.pacbio.v1.dict
samtools faidx originals/FI-OER-3-3.pacbio.v1.fasta

# split reference into contigs
awk -F "|" '/^>/ {close(F);F = "ref/ref_split/"$1".fasta"} {print >> F}' originals/FI-OER-3-3.pacbio.v1.fasta

# prepare reference contigs
for c in ref/ref_split/*
do
contig="$(echo "$c" | sed -e 's~ref/ref_split/>~~' | sed -e 's/.fasta//')"
# remove > in filename
mv $c ref/ref_split/$contig.fasta
# index reference contigs
samtools faidx ref/ref_split/$contig.fasta
done

##########################################################################################
# Samples #
###########

# First: make alternative references
# Second: cut orthologs

#########
# First #
#########

# replace polymorphic positions in the reference according to the information in the g.vcf and thereby produce two alternative references for each sample
for s in gvcf/*.g.vcf.gz
do 
sample="$(echo "$s" | sed -e 's~gvcf/~~' | sed -e 's/.g.vcf.gz//')"
echo $sample

# index the vcf for gatk
tabix -p vcf $s

# make a vcf out of the g.vcf containing only binary positions
gatk -T GenotypeGVCFs \
-R originals/FI-OER-3-3.pacbio.v1.fasta -o vcf/$sample.vcf \
--variant gvcf/$sample.g.vcf.gz
vcftools --vcf vcf/$sample.vcf --remove-indels --recode --recode-INFO-all --out vcf/$sample.SNPsonly

# split vcf into contigs using the r package PopGenome
Rscript originals/vcfsplit.r $sample
# ! not every contig is output, because some sample have no SNPs in some 

# directory for alternative contigs
mkdir samplefasta/$sample/ 

# make alternative contigs
for c in ref/ref_split/*.fasta
do
contig="$(echo "$c" | sed -e 's~ref/ref_split/~~' | sed -e 's/.fasta//')"
# check if there is a vcf for each contig, if not, copy the reference contig fasta
if [ ! -f "vcf/vcf_split/$sample/$contig" ]; then
cp $c samplefasta/$sample/${sample}_${contig}:0.fa
cp $c samplefasta/$sample/${sample}_${contig}:1.fa
sed -i '' -E "s/^>contig-..../>${sample}_${contig}:0/g" samplefasta/$sample/${sample}_${contig}:0.fa
sed -i '' -E "s/^>contig-..../>${sample}_${contig}:1/g" samplefasta/$sample/${sample}_${contig}:1.fa
continue 
fi
# else delete the empty row generated by PopGenome and fake-phase the vcf to afterwards generate the alternative fasta
sed -i '/^$/d' vcf/vcf_split/$sample/$contig
sed -e "s~/~|~g" vcf/vcf_split/$sample/$contig > vcf/vcf_split/$sample/$contig.fakephased.vcf
vcf2fasta -f ref/ref_split/$contig.fasta -P 2 -p samplefasta/$sample/ vcf/vcf_split/$sample/$contig.fakephased.vcf 

done

# concatenate all contig fasta to one reference fasta
cat samplefasta/$sample/*0.fa > samplefasta/${sample}_1.fasta
cat samplefasta/$sample/*1.fa > samplefasta/${sample}_2.fasta


done

##########
# Second #
##########

# make the gff match the fasta's
cat originals/FI-OER-3-3.pacbio.v1.gff3 originals/fakeGene.csv > FI-OER-3-3.pacbio.mod.gff3

# loop to generate the fasta files for each gene
for s in samplefasta/*.fasta
do 
sample="$(echo "$s" | sed -e 's~samplefasta/~~' | sed -e 's/.fasta//')"
short="$(echo "$sample" | sed -e 's~_.~~')"
echo $sample

# Prepare the fasta for cutting the orthologs
sed -E "s/${short}_(.*):./\1/g" samplefasta/$sample.fasta > ${sample}_shortHeader.fa

# cut the gene sequences out of the genome-fasta according to the gff for the sample
perl originals/gff2fasta_Ham.pl ${sample}_shortHeader.fa FI-OER-3-3.pacbio.mod.gff3  $sample

# prepare new sample fasta (only containing coding sequences)
sed -i -E "s/(>.*)/\1|$sample/g" $sample.cds.fasta
awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' < $sample.cds.fasta  > $sample.cds.oneline.fasta

# cut orthologs
for i in `cat orthomcl/orthomcl-output_25012021/groups/orthologs_of_FIOER33_to_BEOM2.txt`;do awk 'BEGIN{RS=">"} /'$i'/{print ">" $0}' $sample.cds.oneline.fasta;done > $sample.orthologs.fasta

# create a fasta file for each of the genes
awk -F "|" '/^>/ {close(F) ; F = $1".fasta"} {print >> F}' $sample.orthologs.fasta

# move all unneeded files to the tmp folder
mv $sample* tmp/

done

# move the gene-fastas to the fasta_ingroup folder
for f in *FUN*; do mv "$f" "$(echo "fasta_ingroup/$f" | sed -e 's/>//')";done

##########################################################################################
# Reference plus outgroup #
###########################

# cut orthologs out of Reference genomes of H. tvearminnensis and H. magnivora

# Prepare the reference for cutting the orthologs

# cut the gene sequences out of the reference according to the gff
perl originals/gff2fasta_Ham.pl originals/FI-OER-3-3.pacbio.v1.fasta FI-OER-3-3.pacbio.mod.gff3 Reference

# prepare reference fasta (only containing coding sequences)
sed -i -E "s/(>.*)/\1|FIOER33/g" Reference.cds.fasta
awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' < Reference.cds.fasta  > Reference.cds.oneline.fasta
# cut orthologs
for i in `cat orthomcl/orthomcl-output_25012021/groups/orthologs_of_FIOER33_to_BEOM2.txt`;do awk 'BEGIN{RS=">"} /'$i'/{print ">" $0}' Reference.cds.oneline.fasta;done > Reference.orthologs.fasta

# create a fasta file for each of the genes
awk -F "|" '/^>/ {close(F) ; F = $1".fasta"} {print >> F}' Reference.orthologs.fasta

# move the gene-fastas to the fasta_references folder
for f in *FUN*; do cp "$f" "$(echo "fasta_references/fasta_FIOER33/$f" | sed -e 's/>//')";done

# prepare the outgroup fasta (only containing coding sequences)
awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' < originals/GCA_004325065.1_BEOM2_v1_cds_from_genomic.fna > cds_BEOM2.oneline.fna
sed -i -E 's/(>)lcl.PI............_cds_(..........).*/\1\2|BEOM2/g' cds_BEOM2.oneline.fna
# cut orthologs
for i in `cat orthomcl/orthomcl-output_25012021/groups/orthologs_of_BEOM2_to_FIOER33.txt`;do awk 'BEGIN{RS=">"} /'$i'/{print ">" $0}' cds_BEOM2.oneline.fna;done > BEOM2.orthologs.fasta
#sed -i -E 's/(>)lcl.PI............_cds_(............).*/\1\2|BEOM2/g' BEOM2.orthologs.fasta
# translate gene IDs from BEOM to FIOER33
paste orthomcl/orthomcl-output_25012021/groups/orthologs_of_BEOM2_to_FIOER33.txt orthomcl/orthomcl-output_25012021/groups/orthologs_of_FIOER33_to_BEOM2.txt | while read a b; do sed -i "s/$a/$b/" BEOM2.orthologs.fasta; done

# add the genes to the fastas of the reference genes and move them to the common folder
awk -F "|" '/^>/ {close(F) ; F = $1".fasta"} {print >> F}' BEOM2.orthologs.fasta
for f in *FUN*; do mv "$f" "$(echo "fasta_references/$f" | sed -e 's/>//;s/.fasta//')";done # as input list for Ka/Ks calculation

# move the gene-fastas to the fasta_references folder and the rest to the tmp folder
awk -F "|" '/^>/ {close(F) ; F = $1".fasta"} {print >> F}' BEOM2.orthologs.fasta
for f in *FUN*; do mv "$f" "$(echo "fasta_references/fasta_BEOM2/$f" | sed -e 's/>//')";done
mv Reference* tmp/
mv *BEOM2* tmp/
